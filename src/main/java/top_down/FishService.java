
package top_down;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "FishService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FishService {


    /**
     * 
     * @param arg0
     * @return
     *     returns top_down.Fish
     * @throws FishNotFoundEx_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFish", targetNamespace = "http://service/", className = "top_down.GetFish")
    @ResponseWrapper(localName = "getFishResponse", targetNamespace = "http://service/", className = "top_down.GetFishResponse")
    public Fish getFish(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws FishNotFoundEx_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws FishNotFoundEx_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteFish", targetNamespace = "http://service/", className = "top_down.DeleteFish")
    @ResponseWrapper(localName = "deleteFishResponse", targetNamespace = "http://service/", className = "top_down.DeleteFishResponse")
    public boolean deleteFish(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws FishNotFoundEx_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns top_down.Fish
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addFish", targetNamespace = "http://service/", className = "top_down.AddFish")
    @ResponseWrapper(localName = "addFishResponse", targetNamespace = "http://service/", className = "top_down.AddFishResponse")
    public Fish addFish(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        float arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        boolean arg3);

    /**
     * 
     * @return
     *     returns java.util.List<top_down.Fish>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllFish", targetNamespace = "http://service/", className = "top_down.GetAllFish")
    @ResponseWrapper(localName = "getAllFishResponse", targetNamespace = "http://service/", className = "top_down.GetAllFishResponse")
    public List<Fish> getAllFish();

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countFish", targetNamespace = "http://service/", className = "top_down.CountFish")
    @ResponseWrapper(localName = "countFishResponse", targetNamespace = "http://service/", className = "top_down.CountFishResponse")
    public int countFish();

}
